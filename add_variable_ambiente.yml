---
- name: Criar diretórios e definir permissões
  hosts: "{{ host_awx }}"
  become: yes
  gather_facts: no
  tasks:

    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_ARQUIVO_DUNDI_PERERS####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: log_result

    - name: Capturar endereço MAC
      shell: ifconfig enp0s3 | awk '/ether/{print $2}'
      register: mac_result

    - name: Criar arquivo
      file:
        path: /var/volumes/gateway/includes/dundi_peers.conf
        state: touch

    # Adiciona o texto ao arquivo, incluindo o endereço MAC capturado
    - name: Adicionar texto
      lineinfile:
        path: /var/volumes/gateway/includes/dundi_peers.conf
        line: |
          [{{ mac_result.stdout }}];
          model = symmetric
          precache = none
          host = {{ host_voice }};
          port = 4520
          inkey = dundi
          outkey = dundi
          include = dundi_context
          permit = dundi_context
          qualify = 6500
          register = no
          
    - name: Capturar dados do arquivo dundi
      shell: cat /var/volumes/gateway/includes/dundi_peers.conf >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: mac_result
      
    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_ARQUIVO_UPSTREAM####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: log_result 

    - name: Criar arquivo
      file:
        path: /var/volumes/loadbalancer/includes/upstream.conf
        state: touch

    # Adiciona o texto ao arquivo upstream
    - name: Adicionar texto
      lineinfile:
        path: /var/volumes/loadbalancer/includes/upstream.conf
        line: |
          upstream voice_nodes {
          # Voice 1
          server {{ host_voice }} max_fails=2 fail_timeout=5s;
          }
          
    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_IMAGEM_LOADBALANCER####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: log_result

    - name: Executar script Docker Buildx
      shell: docker build --no-cache --force-rm -t {{ ORION_REGISTRY }}/loadbalancer:{{ ORION_ARCH }}-latest /home/awx/orion/infra/servicos/loadbalancer/ >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_LISTA_IMAGEM_BALANCER####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: log_result

    - name: Executar 'docker images' para listar imagens com 'files'
      shell: docker images --filter reference=dbmorion/balancer  >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: docker_images_result

    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_LISTA_TODAS_IMAGENS####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: log_result

    - name: Executar 'docker images' para listar imagens com 'files'
      shell: docker images  >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      register: docker_images_result
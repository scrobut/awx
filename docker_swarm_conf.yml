---
- name: Inicia Deploy Gateway e Configuracao Docker Swarm
  hosts: "{{ host_awx }}"
  become: yes
  become_user: root
  gather_facts: yes
  vars:
    swarm_join_command: null  # Defina a variável como nula no início

  tasks:
    - name: Inicializar Docker Swarm
      command: docker swarm init
      register: swarm_init_output

    - name: Verificar se o Swarm foi inicializado
      assert:
        that: "'Swarm initialized' in swarm_init_output.stdout"

    - name: Extrair o comando de junção do Swarm
      set_fact:
        swarm_join_command: "{{ swarm_init_output.stdout | regex_search('docker swarm join --token [^ ]+ [0-9:.]+') }}"
      when: swarm_init_output.stdout is defined

- name: Salvar o swarm_join_command em um arquivo
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Salvar o swarm_join_command em um arquivo
      copy:
        content: "{{ swarm_join_command }}"
        dest: /tmp/swarm_join_command.txt
      when: swarm_join_command is defined
      
    - name: Copiar arquivo para o host_voice a partir do host_awx usando SCP
      hosts: "{{ host_awx }}"
      become: yes
      tasks:
        - name: Copiar o arquivo para o host_voice a partir do host_awx usando SCP
          command: scp /tmp/swarm_join_command.txt {{ user_machine }}@{{ host_voice }}:/tmp/swarm_join_command.txt    

- name: Acessar Nó para Ingressar no Swarm
  hosts: "{{ host_voice }}"
  become: yes
  tasks:
    - name: Carregar swarm_join_command do arquivo
      include_vars:
        file: /tmp/swarm_join_command.txt

    - name: Ingressar no Docker Swarm como manager
      command: "{{ swarm_join_command }}"  # A variável agora está disponível globalmente

- name: Verificar Status do Nó no Swarm
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Executar 'docker node ls'
      command: docker node ls

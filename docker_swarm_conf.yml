---
- name: Inicia Deploy Gateway e Configuracao Docker Swarm
  hosts: "{{ host_awx }}"
  become: yes
  become_user: root
  gather_facts: yes
  vars:
    swarm_join_command: null  # Defina a variável como nula no início

- name: Log Message Iniciando docker swarm
  hosts: "{{ host_awx }}"
  gather_facts: no  # Evitar a coleta de fatos nesse passo
  tasks:
    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_SWARM####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

- name: Inicializar Docker Swarm
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Inicializar Docker Swarm
      command: docker swarm init
      register: swarm_init_output

- name: Verificar se o Swarm foi inicializado
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Verificar se o Swarm foi inicializado
      assert:
        that: "'Swarm initialized' in swarm_init_output.stdout"

- name: Extrair o comando de junção do Swarm
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Extrair o comando de junção do Swarm
      set_fact:
        swarm_join_command: "{{ swarm_init_output.stdout | regex_search('docker swarm join --token [^ ]+ [0-9:.]+') }}"
      when: swarm_init_output.stdout is defined

- name: Salvar o swarm_join_command em um arquivo
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Salvar o swarm_join_command em um arquivo
      copy:
        content: "{{ swarm_join_command }}"
        dest: /tmp/swarm_join_command.txt
      when: swarm_join_command is defined

- name: Log Message copiando arquivo para voice
  hosts: "{{ host_awx }}"
  gather_facts: no
  tasks:
    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_SCP_PARA_VOICE####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

- name: Copiar arquivo para o host_voice a partir do host_awx usando SCP
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Copiar o arquivo para o host_voice a partir do host_awx usando SCP
      command: sshpass -p {{ senha_awx }} scp -o StrictHostKeyChecking=no /tmp/swarm_join_command.txt {{ user_machine }}@{{ host_voice }}:/tmp/swarm_join_command.txt

- name: Acessar Nó para Ingressar no Swarm
  hosts: "{{ host_voice }}"
  become: yes
  tasks:
    - name: Ler o conteúdo do arquivo swarm_join_command.txt
      shell: cat /tmp/swarm_join_command.txt
      register: swarm_join_command_content
    - debug:
        var: swarm_join_command_content.stdout

- name: Log Message inserindo chave para conectar ao leader
  hosts: "{{ host_voice }}"
  gather_facts: no
  tasks:
    - name: Escrever mensagem no log
      shell: echo "\033[32m####_INICIANDO_JOIN_MANAGER####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

- name: Executar o comando a partir do arquivo swarm_join_command.txt
  hosts: "{{ host_voice }}"
  become: yes
  tasks:
    - name: Executar o comando a partir do arquivo swarm_join_command.txt
      shell: "{{ swarm_join_command_content.stdout }}"

- name: Log Message mostra resultado das nodes
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Escrever mensagem no log
      shell: echo  "\033[32m####_INICIANDO_NODE_LS####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

- name: Verificar Status do Nó no Swarm
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Executar 'docker node ls'
      shell: docker node ls >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

- name: Adicione a label main ao node principal
  hosts: "{{ host_awx }}"
  become: yes
  tasks:
    - name: Escrever mensagem no log
      shell: echo  "\033[32m####_INCLUINDO _LABEL_GW####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1
      
    - name: Executar 'docker node ls'
      shell: docker node update --label-add main=true {{ host_nome_gw }}
      
- name: Adicione a label main ao node voice
  hosts: "{{ host_voice }}"
  become: yes
  tasks:
    - name: Escrever mensagem no log
      shell: echo  "\033[32m####_INCLUINDO _LABEL_VOICE####\033[0m" >> /var/log/ansible_deploy_logs/deploy_log.txt 2>&1

    - name: Executar 'docker node ls'
      shell: docker node update --label-add main=true {{ host_nome_voice }}      
